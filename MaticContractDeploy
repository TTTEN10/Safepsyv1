pragma solidity ^0.8.0;

const { Matic } = require('maticjs')

// Set the network id and private key of the account that you want to use to deploy the contract.
const network = '<NETWORK_ID>'
const privateKey = '<PRIVATE_KEY>'

// Set the asset identifier and allowed addresses that you want to pass to the contract.
const assetId = '<ASSET_IDENTIFIER>'
const allowedAddresses = ['<ADDRESS_1>', '<ADDRESS_2>', ...]

// Create a new Matic.js instance.
const matic = new Matic({
  maticProvider: `https://${network}.matic.today`,
  parentProvider: `https://${network}.eth.polygon.io`,
  privateKey: privateKey,
})
// Set the contract ABI and bytecode.
const contractABI = [{...}] // Replace this with the ABI of the NFT contract.
const contractBytecode = '0x<CONTRACT_BYTECODE>' // Replace this with the bytecode of the NFT contract.

// Deploy the contract.
matic.contract.deploy(contractABI, contractBytecode, [assetId, allowedAddresses])
  .then((contract) => {
    // The contract is now deployed!
    console.log(`Contract deployed at: ${contract.options.address}`)
  })
  .catch((error) => {
    // There was an error deploying the contract.
    console.error(error)
  })


/// This code does the following: Imports the Matic object from the maticjs library.
/// Sets the network id and private key of the account that you want to use to deploy the contract.
/// Sets the asset identifier and allowed addresses that you want to pass to the contract.
/// Creates a new Matic.js instance and sets the Matic and parent providers.
/// Sets the contract ABI and bytecode.
/// Calls the deploy function of the matic.contract object to deploy the contract on the Polygon blockchain. This function takes in the contract ABI, bytecode, and an array of arguments to pass to the contract's constructor.
